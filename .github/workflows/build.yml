name: "CI/CD"

env:
  GODOT_VERSION: 4.3

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  linux:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    container:
      image: barichello/godot-ci:4.3

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Move export templates into position
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable

      - name: Create staging directory
        run: mkdir -v -p export/linux

      - name: Build for Linux
        run: godot -v --export-debug --headless "linux" --path . --output "export/linux/game.x86_64"

      - name: Zip Linux artifacts
        run: zip -r game_linux.zip export/linux

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v3
        with:
          name: game_linux
          path: game_linux.zip

  android:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    container:
      image: barichello/godot-ci:4.1

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Installing JAVA 17
        uses: actions/setup-java@v4.3.0
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Move export templates into position
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates
          mv /root/.local/share/godot/export_templates/4.1.stable ~/.local/share/godot/export_templates/4.1.stable

      - name: Create staging directory
        run: mkdir -v -p export/android

      - name: Build for Android
        run: |
          echo $SECRET_RELEASE_KEYSTORE_BASE64 | base64 --decode > /root/release.keystore
          mkdir -v -p build/android

          sed 's@keystore/release=".*"@keystore/release="'/root/release.keystore'"@g' -i export_presets.cfg
          sed 's@keystore/release_user=".*"@keystore/release_user="'$SECRET_RELEASE_KEYSTORE_USER'"@g' -i export_presets.cfg
          sed 's@keystore/release_password=".*"@keystore/release_password="'$SECRET_RELEASE_KEYSTORE_PASSWORD'"@g' -i export_presets.cfg
          godot -v --headless --export-release "android" --path . --output "export/android/game.apk"

      - name: Zip Android artifacts
        run: zip -r game_android.zip export/android

      - name: Upload Android artifacts
        uses: actions/upload-artifact@v3
        with:
          name: game_android
          path: game_android.zip
  windows:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    container:
      image: barichello/godot-ci:4.3

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Move export templates into position
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable

      - name: Create staging directory
        run: mkdir -v -p export/windows

      - name: Build for windows
        run: godot -v --export-debug --headless "windows" --path . --output "export/windows/game.exe"

      - name: Zip Windows artifacts
        run: zip -r game_windows.zip export/windows

      - name: Upload windows artifacts
        uses: actions/upload-artifact@v3
        with:
          name: game_windows
          path: game_windows.zip

  release:
    needs: [windows, linux, android]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get branch name
        id: get_branch
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV

      - name: Download Linux artifacts
        uses: actions/download-artifact@v3
        with:
          name: game_linux

      - name: Download Android artifacts
        uses: actions/download-artifact@v3
        with:
          name: game_android

      - name: Download Windows artifacts
        uses: actions/download-artifact@v3
        with:
          name: game_windows
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: ${{ github.run_number }}
          body: |
            Release notes for ${{ github.run_number }}
          draft: false
          prerelease: true

      - name: Upload Linux Release Asset
        id: upload-linux-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: game_linux.zip
          asset_name: Hill_Climb_Driving_Linux.zip
          asset_content_type: application/zip

      - name: Upload Android Release Asset
        id: upload-android-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: game_android.zip
          asset_name: Hill_Climb_Driving_Android.zip
          asset_content_type: application/zip

      - name: Upload Windows Release Asset
        id: upload-windows-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: game_windows.zip
          asset_name: Hill_Climb_Driving_Windows.zip
          asset_content_type: application/zip